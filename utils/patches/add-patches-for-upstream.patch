diff --git a/fakevim/fakevimactions.cpp b/fakevim/fakevimactions.cpp
index 7f7c44b..5f59987 100644
--- a/fakevim/fakevimactions.cpp
+++ b/fakevim/fakevimactions.cpp
@@ -10,14 +10,6 @@
 // Qt Creator. The idea is to keep this file here in a "clean" state that
 // allows easy reuse with any QTextEdit or QPlainTextEdit derived class.
 
-#include <utils/hostosinfo.h>
-#include <utils/layoutbuilder.h>
-#include <utils/qtcassert.h>
-
-#include <QDebug>
-
-using namespace Utils;
-
 namespace FakeVim {
 namespace Internal {
 
@@ -128,8 +120,13 @@ FakeVimSettings::FakeVimSettings()
     backspace.setDisplayStyle(FvStringAspect::LineEditDisplay);
     isKeyword.setDisplayStyle(FvStringAspect::LineEditDisplay);
 
-    const QString vimrcDefault = QLatin1String(HostOsInfo::isAnyUnixHost()
-                ? "$HOME/.vimrc" : "%USERPROFILE%\\_vimrc");
+    const QString vimrcDefault = QLatin1String(
+#ifdef Q_OS_UNIX
+                "$HOME/.vimrc"
+#else
+                "%USERPROFILE%\\_vimrc"
+#endif
+    );
     vimRcPath.setExpectedKind(PathChooser::File);
     vimRcPath.setToolTip(Tr::tr("Keep empty to use the default path, i.e. "
                "%USERPROFILE%\\_vimrc on Windows, ~/.vimrc otherwise."));
diff --git a/fakevim/fakevimactions.h b/fakevim/fakevimactions.h
index 6f7e303..5aead73 100644
--- a/fakevim/fakevimactions.h
+++ b/fakevim/fakevimactions.h
@@ -4,7 +4,13 @@
 #pragma once
 
 #ifndef FAKEVIM_STANDALONE
-#   include <utils/aspects.h>
+#define FAKEVIM_STANDALONE
+#endif
+
+#ifdef FAKEVIM_STANDALONE
+#   include "private/fakevim_export.h"
+#else
+#   include <utils/savedaction.h>
 #endif
 
 #include <QCoreApplication>
@@ -17,7 +23,7 @@ namespace FakeVim {
 namespace Internal {
 
 #ifdef FAKEVIM_STANDALONE
-class FvBaseAspect
+class FAKEVIM_EXPORT FvBaseAspect
 {
 public:
     FvBaseAspect();
@@ -73,7 +79,7 @@ using FvStringAspect = Utils::StringAspect;
 
 #endif
 
-class FakeVimSettings final : public FvAspectContainer
+class FAKEVIM_EXPORT FakeVimSettings final : public FvAspectContainer
 {
 public:
     FakeVimSettings();
@@ -142,7 +148,7 @@ private:
     QHash<FvBaseAspect *, QString> m_aspectToName;
 };
 
-FakeVimSettings *fakeVimSettings();
+FAKEVIM_EXPORT FakeVimSettings *fakeVimSettings();
 
 } // namespace Internal
 } // namespace FakeVim
diff --git a/fakevim/fakevimhandler.h b/fakevim/fakevimhandler.h
index 7c0ceca..6841b89 100644
--- a/fakevim/fakevimhandler.h
+++ b/fakevim/fakevimhandler.h
@@ -3,6 +3,12 @@
 
 #pragma once
 
+#ifndef FAKEVIM_STANDALONE
+#define FAKEVIM_STANDALONE
+#endif
+
+#include "private/fakevim_export.h"
+
 #include <QObject>
 #include <QTextEdit>
 
@@ -23,7 +29,7 @@ enum RangeMode
     RangeBlockAndTailMode // Ctrl-v for D and X
 };
 
-struct Range
+struct FAKEVIM_EXPORT Range
 {
     Range() = default;
     Range(int b, int e, RangeMode m = RangeCharMode);
@@ -35,7 +41,7 @@ struct Range
     RangeMode rangemode = RangeCharMode;
 };
 
-struct ExCommand
+struct FAKEVIM_EXPORT ExCommand
 {
     ExCommand() = default;
     ExCommand(const QString &cmd, const QString &args = QString(),
@@ -87,7 +93,7 @@ private:
     Function m_callable;
 };
 
-class FakeVimHandler : public QObject
+class FAKEVIM_EXPORT FakeVimHandler : public QObject
 {
     Q_OBJECT
 
